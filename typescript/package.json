{
  "name": "lambgoscript",
  "version": "1.0.0",
  "description": "This the a test of compute heavy operations using golang and typescript both running on lamda using different methods to see how they fair performance wise",
  "main": "app.js",
  "scripts": {
    "start": "node ./build/app.js",
    "start.dev": "nodemon",
    "build": "rimraf ./build && tsc",
    "test": "jest --passWithNoTests",
    "watch-test": "jest --passWithNoTests --watchAll --detectOpenHandles"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Darrellbor/lambgoscript.git"
  },
  "keywords": [
    "lambda",
    "functions",
    "golang",
    "typescript",
    "concurrency",
    "computational",
    "heavy",
    "operation"
  ],
  "author": "Darrel Idiagbor",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/Darrellbor/lambgoscript/issues"
  },
  "homepage": "https://github.com/Darrellbor/lambgoscript#readme",
  "devDependencies": {
    "@types/jest": "^29.5.1",
    "jest": "^29.5.0",
    "nodemon": "^2.0.22",
    "rimraf": "^5.0.0",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.1",
    "typescript": "^5.0.4"
  }
}
